{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "http://Add.link.to.GitHub.where.this.Specification.can.be.found",
	"$version": "0.1.0",
	"title": "Replenishment Order",
	"description": "RDG Replenishment Order",
	"type": "object",
	"properties": {
		"Version": {
			"type": "string",
			"description": "Schema version number. Schema versioning needs to be defined",
			"maxLength": 6,
			"minLength": 1
		},
		"retailerIdentifierType": {
			"type": "object",
			"properties": {
				"retailerIdentifierType": {
					"type": "string",
					"minLength": 1,
					"maxLength": 3,
					"description": "CBD Class Unit Type of the Group. Always LIG (stands for LEGAL IKEA GROUPING)."
				},
				"retailerIdentifierCode": {
					"type": "string",
					"minLength": 1,
					"maxLength": 5,
					"description": "CBD Class Unit Code of the Group. Acting in this context as legal code of the Retailer. E.g. corresponding code for HOUSEMARKET is 017"
				},
				"traceID": {
					"description": "Format needs to be defined by the CEM model",
					"type": "string"
				},
				"BusinessUnitCodeMessageReceiver": {
					"type": "string",
					"description": "Code for receiving Business Unit",
					"maxLength": 5,
					"minLength": 1
				},
				"BusinessUnitTypeMessageReceiver": {
					"type": "string",
					"description": "Type of Receiving Business Unit: ",
					"maxLength": 3,
					"minLength": 1
				}
			},
			"required": [
				"retailerIdentifierType",
				"retailerIdentifierCode",
				"traceID",
				"BusinessUnitCodeMessageReceiver",
				"BusinessUnitTypeMessageReceiver"
			]
		},
		"data": {
			"type": "array",
			"description": "List of contents having metaDataHeader and dataObjectValues",
			"additionalItems": false,
			"minItems": 1,
			"maxItems": 1,
			"items": {
				"$ref": "#/definitions/dataItem"
			}
		}
	},
	"definitions": {
		"dataItem": {
			"type": "object",
			"properties": {
				"metaDataHeader": {
					"description": "The meta data header of the object having the contentId, contentLatestUpdateDate and optional contentRoutingIdentifier",
					"$ref": "#/definitions/metaDataHeader"
				},
				"dataObjectValue": {
					"$ref": "#/definitions/dataObjectValueType"
				}
			},
			"additionalProperties": false,
			"required": [
				"metaDataHeader",
				"dataObjectValue"
			]
		},
		"metaDataHeader": {
			"type": "object",
			"properties": {
				"contentId": {
					"type": "string",
					"description": "The string describing the unique identifier for the message. This has to be sent from the provider and the provider will guarantee that that it is the always same for a data set. If there are multiple fields that makes up the unique id for a dataset, then the contentId can be a - concatenated string containing the fields needed"
				},
				"contentLatestUpdateDate": {
					"type": "string",
					"description": "the latestUpdateDate which reflects the latest update of the change in the dataset in ISO 8601 format with 3 digits for millis.",
					"format": "date-time",
					"examples": [
						"2020-12-12T13:13:13.000Z",
						"2020-12-12T13:13:13.000+00:00"
					]
				},
				"contentVersion": {
					"type": "integer",
					"description": "An incremental integer attribute that can be used by a consumer system to sort and identify the latest snapshot of the message at consumer end. It could be an exact representation of the contentLatestUpdateDate also in milliseconds format since epoch(1970-01-01)."
				},
				"contentIdMapping": {
					"type": "string",
					"description": "shows the columns that are part of contentId"
				},
				"contentRoutingIdentifier": {
					"type": "array",
					"additionalItems": false,
					"minItems": 1,
					"items": {
						"$ref": "#/definitions/contentRoutingIdentifierType"
					}
				}
			},
			"additionalProperties": false,
			"required": [
				"contentId",
				"contentLatestUpdateDate"
			]
		},
		"contentRoutingIdentifierType": {
			"type": "object",
			"description": " BUCODE & BUTYPE Data that is steering EBBAs filter logic, for example if we only want to send a subset of data to one Company (optional, can be created by EBBA as well as long data exists in dataObjectValues). Filter logic can only handle BusinessUnitType = Store, BusinessUnitType = RetailUnit, BusinessUnitType = Company, BusinessUnitType = CDC ",
			"properties": {
				"code": {
					"type": "string",
					"pattern": "[0-9A-Z]{2,5}"
				},
				"type": {
					"type": "string",
					"enum": [
						"STO",
						"RU",
						"COM",
						"CDC"
					]
				},
				"class": {
					"type": "string",
					"description": "description of the Type of Information that is used for the routing. e.g. Logistical unit in case of Business Units that are involved in the Transaction"
				}
			},
			"additionalProperties": false,
			"required": [
				"code",
				"type"
			]
		},
		"dataObjectValueType": {
			"type": "object",
			"properties": {
				"replOrdList": {
					"type": "array",
					"additionalItems": false,
					"minItems": 1,
					"items": {
						"$ref": "#/definitions/replOrdType"
					}
				}
			},
			"required": [
				"replOrdList"
			]
		},
		"replOrdType": {
			"type": "object",
			"properties": {
				"orderNumber": {
					"type": "number",
					"description": "Unique identification of an order. Could represent INOS, GPS, NATO or GEMINI orders or ID generated by order system"
				},
				"receiverCode": {
					"type": "string",
					"minLength": 2,
					"maxLength": 5,
					"description": "Code of the Original Business Unit receiving the goods."
				},
				"receiverType": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3,
					"description": "Type of the Original Business Unit receiving the goods."
				},
				"senderCode": {
					"type": "string",
					"minLength": 2,
					"maxLength": 5,
					"description": "Code of the Business Unit sending the goods"
				},
				"senderType": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3,
					"description": "Type of the Business Unit sending the goods"
				},
				"receiverCodeActual": {
					"type": "string",
					"minLength": 2,
					"maxLength": 5,
					"description": "Code of the Actual Business Unit receiving the goods."
				},
				"receiverTypeActual": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3,
					"description": "Type of the Actual Business Unit receiving the goods."
				},
				"transitPointCode": {
					"type": "string",
					"maxLength": 5,
					"description": "Transitpoint business unit code. DC No for transit order."
				},
				"transitPointType": {
					"type": "string",
					"maxLength": 3,
					"description": "Transitpoint business unit type. DC Type for transit order."
				},
				"orderMethod": {
					"type": "string",
					"minLength": 2,
					"maxLength": 3,
					"description": "Reflects the origin of the order; what led to the generation of the order (e.g. forecast, fixed requirement)."
				},
				"orderType": {
					"type": "string",
					"minLength": 2,
					"maxLength": 2,
					"description": "Reflects the purpose of the order, what business demand will the order fulfil e.g. Replenishment, Return or Handling Material."
				},
				"statusDescription": {
					"type": "string",
					"minLength": 1,
					"maxLength": 50,
					"description": "Order status description"
				},
				"statusCode": {
					"type": "string",
					"minLength": 1,
					"maxLength": 4,
					"description": "The order status relates to the stage of the order in the order life-cycle."
				},
				"statusChangeDate": {
					"type": "string",
					"format": "date-time",
					"description": "Date when the status changed."
				},
				"reasonDescription": {
					"type": "string",
					"maxLength": 70,
					"description": "Reason Code description"
				},
				"reasonCode": {
					"type": "string",
					"maxLength": 8,
					"description": "Latest reason code e.g. 950"
				},
				"reasonCodeSource": {
					"type": "string",
					"maxLength": 8,
					"description": "System sending the reason code e.g. DT001"
				},
				"itemNumber": {
					"type": "string",
					"minLength": 5,
					"maxLength": 15,
					"description": "How is the Item number created: The number consists of 8 digits. The first one is a check digit.The number of 7 digits, are created by a sequence in the oracle database (one for item type : ART ).Next value for article number is 0339555.The check digit is calculated by modulus 10, see below:Example:60121438 (article number)."
				},
				"itemType": {
					"type": "string",
					"minLength": 3,
					"maxLength": 5,
					"description": "Type of item  : ART = Article, SPR=Sales Product."
				},
				"supplierCode": {
					"type": "string",
					"maxLength": 5,
					"description": "Business Unit code of the supplier of the goods."
				},
				"supplierType": {
					"type": "string",
					"maxLength": 3,
					"description": "Business Unit type of the supplier of the goods. Normally-SUP"
				},
				"unitOfMeasureCode": {
					"type": "string",
					"maxLength": 5,
					"description": "Unit of measure code for the item"
				},
				"itemQuantity": {
					"type": "number",
					"multipleOf": 0.01,
					"maximum": 99999999999.99,
					"description": "Current quantity of the order. Updated during the order life cycle."
				},
				"dispatchDate": {
					"type": "string",
					"format": "date-time",
					"description": "Dispatch date"
				},
				"receiveDate": {
					"type": "string",
					"format": "date-time",
					"description": "Receive date"
				},
				"proposedQuantity": {
					"type": "number",
					"multipleOf": 0.01,
					"maximum": 99999999999.99,
					"description": "Proposed quantity from order source.Decimal format (11,2)"
				},
				"orderedQuantity": {
					"type": "number",
					"multipleOf": 0.01,
					"maximum": 99999999999.99,
					"description": "Ordered quantity sent to the supplying BU. (Might differ from created quantity, if adjustment manual has been made).Decimal format (11,2)"
				},
				"createdQuantity": {
					"type": "number",
					"multipleOf": 0.01,
					"maximum": 99999999999.99,
					"description": "Quantity calculated by the order system.Decimal format (11,2)"
				},
				"confirmedQuantity": {
					"type": "number",
					"multipleOf": 0.01,
					"maximum": 99999999999.99,
					"description": "Latest confirmation of latest dispatch from the sender. This will update the Planned dispatch date To. Decimal format (11,2)"
				},
				"acknowledgeDate": {
					"type": "string",
					"format": "date-time",
					"description": "Date when the order is received by the Sender system (EDI, ECIS, WMS) / (Order gets status acknowledged)"
				},
				"arriveDateAtOrderCreation": {
					"type": "string",
					"format": "date-time",
					"description": "Planned arrival date at confirmation"
				},
				"orderCreationDate": {
					"type": "string",
					"format": "date-time",
					"description": "Date when order is created (gets status created). Creation date in the legacy system (order gets status created)."
				},
				"orderConfirmationDate": {
					"type": "string",
					"format": "date-time",
					"description": "Date when the order is confirmed by the sender (order gets status confirmed)"
				},
				"dispatchDateAtOrdering": {
					"type": "string",
					"format": "date-time",
					"description": "Latest Dispatch date sent to the Sending BU (recalculated from Created dispatch date if order has been suspended)"
				},
				"dispatchDateAtCreation": {
					"type": "string",
					"format": "date-time",
					"description": "Latest Dispatch date calculated by the order system at the order creation (Order date + Sender LT+ dispatch LT)"
				},
				"dispatchDateAtConfirmation": {
					"type": "string",
					"format": "date-time",
					"description": "Confirmed dispatch date"
				},
				"dispatchDateProposed": {
					"type": "string",
					"format": "date-time",
					"description": "Proposed dispatch date"
				},
				"dispatchDateNeeded": {
					"type": "string",
					"format": "date-time",
					"description": "Needed dispatch date for receiver."
				},
				"dispatchDatePlanned": {
					"type": "string",
					"format": "date-time",
					"description": "Planned dispatch date"
				},
				"dispatchDatePlannedFromTransitpoint": {
					"type": "string",
					"format": "date-time",
					"description": "Planned dispatch date from transit point"
				},
				"dispatchDateFromTransitpoint": {
					"type": "string",
					"format": "date-time",
					"description": "Dispatch date from transit point"
				},
				"receiveDateAtOrdering": {
					"type": "string",
					"format": "date-time",
					"description": "Ordered receiving date"
				},
				"receiveDateAtConfirmation": {
					"type": "string",
					"format": "date-time",
					"description": "Planned receive date at confirmation"
				},
				"receiveDateAtCreation": {
					"type": "string",
					"format": "date-time",
					"description": "Planned receive date at creation"
				},
				"receiveDateWished": {
					"type": "string",
					"format": "date-time",
					"description": "Specific receving date that is entered as fix order."
				},
				"receiveDateProposed": {
					"type": "string",
					"format": "date-time",
					"description": "Incomming/proposed receiving date"
				},
				"receiveDateNeeded": {
					"type": "string",
					"format": "date-time",
					"description": "Needed receiving date for receiver."
				},
				"receiveDatePlanned": {
					"type": "string",
					"format": "date-time",
					"description": "Planned receiving date"
				},
				"createTime": {
					"type": "string",
					"format": "date-time",
					"description": "Time of creation with timestamp in source system"
				},
				"updateTime": {
					"type": "string",
					"format": "date-time",
					"description": "Time of update with timestamp in source system"
				},
				"deleteTime": {
					"type": "string",
					"format": "date-time",
					"description": "Time of delete with timestamp in source system"
				},
				"internalOrderKey": {
					"type": "string",
					"maxLength": 50,
					"description": "Internal order key. Also called INOS order id. Concatenation of: receiver (code+type), item (no+type), create date, order source and seq no."
				},
				"omsUpdateDeleteFlag": {
					"type": "string",
					"maxLength": 1,
					"description": "Meta Data,   Indication to consumers interested only in active orders; U = Update, D= Delete"
				},
				"omsPublishDTime": {
					"type": "string",
					"format": "date-time",
					"description": "Meta Data, Latest Update Date, The date and time when OMS latest refreshed the record in O-table"
				},
				"omsPurgeDTime": {
					"type": "string",
					"format": "date-time",
					"description": "Meta Data, when it can be archived, An indication of date and time when OMS will no longer publish the record assuming no further updates"
				}
			},
			"additionalProperties": false,
			"required": [
				"orderNumber",
				"receiverCode",
				"receiverType",
				"receiverCodeActual",
				"receiverTypeActual",
				"orderMethod",
				"orderType",
				"statusDescription",
				"statusCode",
				"statusChangeDate",
				"itemNumber",
				"itemType",
				"createTime",
				"updateTime"
			]
		}
	},
	"required": [
		"Version",
		"retailerIdentifierType",
		"data"
	]
}
